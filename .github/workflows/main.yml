name: Release

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
            
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@Mara2020'
      
      - name: Configure npm authentication
        run: |
          echo "@Mara2020:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> .npmrc
          cat .npmrc
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build:lib
        continue-on-error: false
      
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22.0.5
          branches: |
            [
              'main',
              'master'
            ]
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog

      - name: Check if package version exists
        if: steps.semantic.outputs.new_release_published == 'true'
        id: version_check
        run: |
          VERSION="${{ steps.semantic.outputs.new_release_version }}"
          echo "Checking if version $VERSION already exists..."
          if npm view "@mara2020/medplum-hello-world-testing@$VERSION" version &>/dev/null; then
            echo "Version $VERSION already exists in the registry"
            echo "version_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist in the registry"
            echo "version_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish to GitHub Packages
        if: steps.semantic.outputs.new_release_published == 'true' && steps.version_check.outputs.version_exists == 'false'
        run: |
          echo "Publishing version: ${{ steps.semantic.outputs.new_release_version }}"
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
          
      - name: Skip publishing (version already exists)
        if: steps.semantic.outputs.new_release_published == 'true' && steps.version_check.outputs.version_exists == 'true'
        run: |
          echo "Skipping publish: version ${{ steps.semantic.outputs.new_release_version }} already exists in the registry"